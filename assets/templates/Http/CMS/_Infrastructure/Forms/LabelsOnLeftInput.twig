{% set isFirst = isFirst ?? false  %}
{% set label = label ?? '' %}
{% set subLabel = subLabel ?? '' %}
{% set name = name ?? '' %}
{% set id = id ?? name %}
{% set type = type ?? 'text' %}
{% set description = description ?? '' %}
{% set value = value ?? '' %}

{% set postBackValue = PostMessage['result']['inputValues'][name] ?? null %}
{% set postBackMessages = PostMessage['result']['inputMessages'][name] ?? [] %}

{% set textSwitchTypes = [
    'color',
    'date',
    'datetime-local',
    'email',
    'month',
    'number',
    'password',
    'range',
    'search',
    'tel',
    'time',
    'url',
    'week',
] %}

{% set switchType = type %}

{% if switchType in textSwitchTypes %}
    {% set switchType = 'text' %}
{% endif %}

<div class="sm:grid sm:grid-cols-3 sm:gap-4 sm:items-start{% if not isFirst%} mt-6 sm:border-t sm:border-gray-200 sm:pt-5{% endif %}">
    <label for="{{ id }}" class="block text-sm font-medium leading-5 text-gray-700 sm:mt-px sm:pt-2">
        {{ label|smartypants|widont }}
        <small class="block mt-1 text-xs text-gray-500">{{ subLabel|smartypants|widont }}</small>
    </label>
    <div class="mt-1 sm:mt-0 sm:col-span-2">
        {% switch switchType %}
            {% case 'text' %}
                <div class="max-w-lg rounded-md shadow-sm sm:max-w-xs">
                    <input
                        type="{{ type }}"
                        name="{{ name }}"
                        id="{{ id }}"
                        class="form-input block w-full transition duration-150 ease-in-out sm:text-sm sm:leading-5{% if postBackMessages|length > 0 %} border-red-800{% endif %}"
                        value="{{ postBackValue ?: value }}"
                    >
                </div>
            {% case 'textarea' %}
                <div class="max-w-lg flex rounded-md shadow-sm">
                    <textarea
                        name="{{ name }}"
                        id="{{ id }}"
                        rows="3"
                        class="form-textarea block w-full transition duration-150 ease-in-out sm:text-sm sm:leading-5"
                    >{{ postBackValue ?: value }}</textarea>
                </div>
            {% case 'file_upload' %}
                <div
                    x-init="RunWhenReady('FileUploadField', {
                        data: data,
                        el: $el
                    })"
                    x-data="{
                        data: {
                            mode: 'incompatible',
                            message: '{{ postBackValue['file_name'] ?? value }}',
                            messageType: 'success',
                            uploadInProgress: false,
                            filePath: '{{ postBackValue['file_path'] ?? '' }}',
                            fileName: '{{ postBackValue['file_name'] ?? '' }}',
                        },
                    }"
                >
                    <input
                        type="hidden"
                        name="{{ name }}[file_path]"
                        x-model="data.filePath"
                    >
                    <input
                        type="hidden"
                        name="{{ name }}[file_name]"
                        x-model="data.fileName"
                    >

                    {# Message #}
                    <div
                        class="mb-2 text-green-600"
                        x-text="data.message"
                        :class="{
                            'text-red-700': data.messageType === 'error',
                            'text-green-600': data.messageType !== 'error'
                        }"
                    >
                    </div>
                    <div
                        class="max-w-lg flex justify-center px-6 pt-5 pb-6 border-2 border-gray-300 border-dashed rounded-md relative"
                    >
                        {# Incompatible browser overlay #}
                        <div
                            class="absolute inset-0 bg-gray-300 bg-opacity-75 z-10 rounded-md"
                            style="display: none;"
                            x-show="data.mode === 'incompatible'"
                        >
                            <span
                                class="font-bold p-2 block absolute w-full text-center"
                                style="top: 50%; left: 50%; transform: translate(-50%, -50%);"
                            >
                                Your browser does not support file uploads
                            </span>
                        </div>

                        {# Drag in progress overlay #}
                        <div
                            class="absolute inset-0 bg-gray-300 bg-opacity-75 z-10 rounded-md"
                            style="display: none;"
                            x-show="data.mode === 'dragInProgress'"
                        >
                        </div>

                        {# Upload in progress overlay #}
                        <div
                            class="absolute inset-0 bg-gray-300 bg-opacity-75 z-10 rounded-md"
                            style="display: none;"
                            x-show="data.uploadInProgress"
                        >
                            <div
                                class="font-bold p-2 block absolute w-full text-center"
                                style="top: 50%; left: 50%; transform: translate(-50%, -50%);"
                            >
                                <div class="lds-dual-ring"></div>
                            </div>
                        </div>

                        <div class="text-center">
                            <svg class="mx-auto h-12 w-12 text-gray-400" stroke="currentColor" fill="none" viewBox="0 0 48 48">
                                <path d="M28 8H12a4 4 0 00-4 4v20m32-12v8m0 0v8a4 4 0 01-4 4H12a4 4 0 01-4-4v-4m32-4l-3.172-3.172a4 4 0 00-5.656 0L28 28M8 32l9.172-9.172a4 4 0 015.656 0L28 28m0 0l4 4m4-24h8m-4-4v8m-12 4h.02" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                            </svg>
                            <p class="mt-1 text-sm text-gray-600">
                                {# <button
                                    type="button"
                                    class="font-medium text-indigo-600 hover:text-indigo-500 focus:outline-none focus:underline transition duration-150 ease-in-out"
                                >
                                    Upload a file
                                </button>
                                or  #}drag and drop a file to upload
                            </p>
                            {% if description %}
                                <p class="mt-1 text-xs text-gray-500">
                                    {{ description|smartypants|widont }}
                                </p>
                            {% endif %}
                        </div>
                    </div>
                </div>
            {% case 'radio' %}
                {% if description %}
                    <p class="text-sm leading-5 text-gray-500">Another Description</p>
                {% endif %}
                <div class="mt-4">
                    {% set options = options ?? [] %}
                    {% for option in options %}
                        {% set radioId = id ~ option.value %}
                        <div class="{% if not loop.first %}mt-4 {% endif %}flex items-center">
                            <input
                                id="{{ radioId }}"
                                name="{{ name }}"
                                value="{{ option.value }}"
                                type="{{ type }}"
                                class="form-radio h-4 w-4 text-indigo-600 transition duration-150 ease-in-out"
                                {% if postBackValue %}
                                    {% if postBackValue == option.value %}
                                        checked
                                    {% endif %}
                                {% elseif value %}
                                    {% if value == option.value %}
                                        checked
                                    {% endif %}
                                {% elseif loop.first %}
                                    checked
                                {% endif %}
                            >
                            <label for="{{ radioId }}" class="ml-3">
                                <span class="block text-sm leading-5 font-medium text-gray-700">
                                    {{ option.label|smartypants|widont }}
                                </span>
                            </label>
                        </div>
                    {% endfor %}
                </div>
            {% case 'select' %}
                {% set multiple = multiple ?? false %}
                <div class="max-w-lg rounded-md shadow-sm sm:max-w-xs">
                    <select
                        id="{{ id }}"
                        name="{{ name }}{% if multiple %}[]{% endif %}"
                        class="block form-select w-full transition duration-150 ease-in-out sm:text-sm sm:leading-5"
                        style="background-image: none"
                        ref="select"
                        {% if multiple %}
                        multiple
                        {% endif %}
                    >
                        {% set options = options ?? [] %}
                        {% for option in options %}
                            <option
                                value="{{ option.value }}"
                                {% if postBackValue %}
                                    {% if postBackValue == option.value %}
                                        selected
                                    {% endif %}
                                {% elseif value %}
                                    {% if value == option.value %}
                                        selected
                                    {% endif %}
                                {% elseif loop.first %}
                                    selected
                                {% endif %}
                            >
                                {{ option.label }}
                            </option>
                        {% endfor %}
                    </select>
                </div>
            {% case 'lightswitch' %}
                {% if postBackValue is not null %}
                    {% set lightSwitchValue = postBackValue %}
                {% else %}
                    {% set lightSwitchValue = (value == true or value == 'true') ? 'true' : 'false' %}
                {% endif %}
                <span
                    role="checkbox"
                    tabindex="0"
                    aria-checked="false"
                    class="bg-gray-200 relative inline-flex flex-shrink-0 h-6 w-11 border-2 border-transparent rounded-full cursor-pointer transition-colors ease-in-out duration-200 focus:outline-none focus:shadow-outline"
                    x-data="{ on: {{ lightSwitchValue }} }"
                    :class="{ 'bg-gray-200': !on, 'bg-indigo-600': on }"
                    @click="on = !on"
                    @keydown.space.prevent="on = !on"
                    :aria-checked="on.toString()"
                >
                    <input type="hidden" name="{{ name }}" value="false" x-bind:value="on.toString()">
                    <span
                        aria-hidden="true"
                        class="translate-x-0 relative inline-block h-5 w-5 rounded-full bg-white shadow transform transition ease-in-out duration-200"
                        :class="{ 'translate-x-5': on, 'translate-x-0': !on }"
                    >
                        <span
                            class="opacity-100 ease-in duration-200 absolute inset-0 h-full w-full flex items-center justify-center transition-opacity"
                            :class="{ 'opacity-0 ease-out duration-100': on, 'opacity-100 ease-in duration-200': !on }"
                        >
                            <svg class="h-3 w-3 text-gray-400" fill="none" viewBox="0 0 12 12">
                                <path d="M4 8l2-2m0 0l2-2M6 6L4 4m2 2l2 2" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                            </svg>
                        </span>
                        <span
                            class="opacity-0 ease-out duration-100 absolute inset-0 h-full w-full flex items-center justify-center transition-opacity"
                            :class="{ 'opacity-100 ease-in duration-200': on, 'opacity-0 ease-out duration-100': !on }"
                        >
                            <svg class="h-3 w-3 text-indigo-600" fill="currentColor" viewBox="0 0 12 12">
                                <path d="M3.707 5.293a1 1 0 00-1.414 1.414l1.414-1.414zM5 8l-.707.707a1 1 0 001.414 0L5 8zm4.707-3.293a1 1 0 00-1.414-1.414l1.414 1.414zm-7.414 2l2 2 1.414-1.414-2-2-1.414 1.414zm3.414 2l4-4-1.414-1.414-4 4 1.414 1.414z" />
                            </svg>
                        </span>
                    </span>
                </span>
            {% case 'markdown' %}
                <div class="max-w-2xl">
                    <p class="mt-1 text-xs text-gray-500">
                        Format using Markdown (Github Flavored)
                    </p>
                    <textarea
                        name="{{ name }}"
                        id="{{ id }}"
                        rows="10"
                        class="form-textarea block w-full transition duration-150 ease-in-out sm:text-sm sm:leading-5"
                        x-init="RunWhenReady('MarkdownTextArea', {
                            el: $el
                        })"
                        x-data="{
                            data: {
                            },
                        }"
                    >{{ postBackValue ?: value }}</textarea>
                </div>
            {% case 'simple_table' %}
                {% set fieldConfig = fieldConfig ?? [] %}
                <div
                    class="flex flex-col"
                    x-init="RunWhenReady('SimpleTable', {
                        el: $el
                    })"
                    x-data="{
                        data: {
                        },
                    }"
                >
                    <template ref="rowTemplate" style="display: none;">
                        <tr class="bg-white" ref="row">
                            <td class="p-1 text-center">
                                <div class="w-4 h-4 inline-block cursor-move js-drag-sort-handle">
                                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path d="M507.353,245.245l-83.692-78.769c-4.289-4.039-10.57-5.141-15.98-2.803c-5.409,2.337-8.911,7.665-8.911,13.558v34.462 h-98.462v-98.462h34.462c5.892,0,11.221-3.502,13.558-8.911c2.337-5.409,1.236-11.69-2.803-15.98L266.755,4.647 C263.964,1.682,260.072,0,256,0s-7.964,1.682-10.755,4.647L166.476,88.34c-4.039,4.29-5.14,10.571-2.803,15.98 c2.337,5.409,7.665,8.911,13.558,8.911h34.462v98.462h-98.462v-34.462c0-5.892-3.502-11.221-8.911-13.558 c-5.41-2.337-11.69-1.236-15.98,2.803L4.647,245.245C1.682,248.036,0,251.928,0,256c0,4.072,1.682,7.964,4.647,10.755 l83.692,78.769c4.29,4.039,10.57,5.141,15.98,2.803c5.409-2.337,8.911-7.665,8.911-13.558v-34.462h98.462v98.462h-34.462 c-5.892,0-11.221,3.502-13.558,8.911c-2.337,5.409-1.236,11.69,2.803,15.98l78.769,83.692c2.79,2.966,6.683,4.647,10.755,4.647 c4.072,0,7.964-1.682,10.755-4.647l78.769-83.692c4.039-4.29,5.14-10.571,2.803-15.98c-2.337-5.409-7.665-8.911-13.558-8.911 h-34.462v-98.462h98.462v34.462c0,5.892,3.502,11.221,8.911,13.558c5.41,2.337,11.691,1.236,15.98-2.803l83.692-78.769 c2.966-2.79,4.647-6.683,4.647-10.755S510.318,248.036,507.353,245.245z"/></svg>
                                </div>
                            </td>
                            {% for col in fieldConfig %}
                                <td class="px-3 py-2 whitespace-no-wrap text-sm leading-5 font-medium text-gray-900">
                                    <div class="rounded-md shadow-sm">
                                        <input
                                            type="text"
                                            name="{{ name }}[{{ col.name }}][]"
                                            class="form-input block w-full transition duration-150 ease-in-out sm:text-sm sm:leading-5"
                                        >
                                    </div>
                                </td>
                            {% endfor %}
                            <td class="p-1 text-center" ref="deleteRow">
                                <div
                                    class="w-4 h-4 inline-block cursor-pointer"
                                >
                                    <svg viewBox="0 0 365.696 365.696" xmlns="http://www.w3.org/2000/svg"><path d="m243.1875 182.859375 113.132812-113.132813c12.5-12.5 12.5-32.765624 0-45.246093l-15.082031-15.082031c-12.503906-12.503907-32.769531-12.503907-45.25 0l-113.128906 113.128906-113.132813-113.152344c-12.5-12.5-32.765624-12.5-45.246093 0l-15.105469 15.082031c-12.5 12.503907-12.5 32.769531 0 45.25l113.152344 113.152344-113.128906 113.128906c-12.503907 12.503907-12.503907 32.769531 0 45.25l15.082031 15.082031c12.5 12.5 32.765625 12.5 45.246093 0l113.132813-113.132812 113.128906 113.132812c12.503907 12.5 32.769531 12.5 45.25 0l15.082031-15.082031c12.5-12.503906 12.5-32.769531 0-45.25zm0 0"/></svg>
                                </div>
                            </td>
                        </tr>
                    </template>
                    <div class="py-2 overflow-x-auto sm:-mx-6 sm:px-6 lg:-mx-8 lg:px-8">
                        <div class="align-middle inline-block min-w-full shadow overflow-hidden sm:rounded-lg border-b border-gray-200">
                            <table class="min-w-full divide-y divide-gray-200">
                                <thead>
                                    <tr>
                                        <th class="bg-gray-50"></th>
                                        {% for col in fieldConfig %}
                                            <th class="px-3 py-2 bg-gray-50 text-left text-xs leading-4 font-medium text-gray-500 uppercase tracking-wider">
                                                {{ col.label|smartypants|widont }}
                                            </th>
                                        {% endfor %}
                                        <th class="bg-gray-50"></th>
                                    </tr>
                                </thead>
                                <tbody ref="tableBody">
                                    {% set valueFormatted = formatSimpleTablePostBackValue(postBackValue) %}
                                    {% if valueFormatted|length < 1 %}
                                        {% set valueFormatted = value %}
                                    {% endif %}
                                    {% for row in valueFormatted %}
                                        <tr class="bg-white" ref="row">
                                            <td class="p-1 text-center">
                                                <div class="w-4 h-4 inline-block cursor-move js-drag-sort-handle">
                                                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path d="M507.353,245.245l-83.692-78.769c-4.289-4.039-10.57-5.141-15.98-2.803c-5.409,2.337-8.911,7.665-8.911,13.558v34.462 h-98.462v-98.462h34.462c5.892,0,11.221-3.502,13.558-8.911c2.337-5.409,1.236-11.69-2.803-15.98L266.755,4.647 C263.964,1.682,260.072,0,256,0s-7.964,1.682-10.755,4.647L166.476,88.34c-4.039,4.29-5.14,10.571-2.803,15.98 c2.337,5.409,7.665,8.911,13.558,8.911h34.462v98.462h-98.462v-34.462c0-5.892-3.502-11.221-8.911-13.558 c-5.41-2.337-11.69-1.236-15.98,2.803L4.647,245.245C1.682,248.036,0,251.928,0,256c0,4.072,1.682,7.964,4.647,10.755 l83.692,78.769c4.29,4.039,10.57,5.141,15.98,2.803c5.409-2.337,8.911-7.665,8.911-13.558v-34.462h98.462v98.462h-34.462 c-5.892,0-11.221,3.502-13.558,8.911c-2.337,5.409-1.236,11.69,2.803,15.98l78.769,83.692c2.79,2.966,6.683,4.647,10.755,4.647 c4.072,0,7.964-1.682,10.755-4.647l78.769-83.692c4.039-4.29,5.14-10.571,2.803-15.98c-2.337-5.409-7.665-8.911-13.558-8.911 h-34.462v-98.462h98.462v34.462c0,5.892,3.502,11.221,8.911,13.558c5.41,2.337,11.691,1.236,15.98-2.803l83.692-78.769 c2.966-2.79,4.647-6.683,4.647-10.755S510.318,248.036,507.353,245.245z"/></svg>
                                                </div>
                                            </td>
                                            {% for col in fieldConfig %}
                                                <td class="px-3 py-2 whitespace-no-wrap text-sm leading-5 font-medium text-gray-900">
                                                    <div class="rounded-md shadow-sm">
                                                        <input
                                                            type="text"
                                                            name="{{ name }}[{{ col.name }}][]"
                                                            class="form-input block w-full transition duration-150 ease-in-out sm:text-sm sm:leading-5"
                                                            value="{{ row[col.name] ?? '' }}"
                                                        >
                                                    </div>
                                                </td>
                                            {% endfor %}
                                            <td class="p-1 text-center" ref="deleteRow">
                                                <div
                                                    class="w-4 h-4 inline-block cursor-pointer"
                                                >
                                                    <svg viewBox="0 0 365.696 365.696" xmlns="http://www.w3.org/2000/svg"><path d="m243.1875 182.859375 113.132812-113.132813c12.5-12.5 12.5-32.765624 0-45.246093l-15.082031-15.082031c-12.503906-12.503907-32.769531-12.503907-45.25 0l-113.128906 113.128906-113.132813-113.152344c-12.5-12.5-32.765624-12.5-45.246093 0l-15.105469 15.082031c-12.5 12.503907-12.5 32.769531 0 45.25l113.152344 113.152344-113.128906 113.128906c-12.503907 12.503907-12.503907 32.769531 0 45.25l15.082031 15.082031c12.5 12.5 32.765625 12.5 45.246093 0l113.132813-113.132812 113.128906 113.132812c12.503907 12.5 32.769531 12.5 45.25 0l15.082031-15.082031c12.5-12.503906 12.5-32.769531 0-45.25zm0 0"/></svg>
                                                </div>
                                            </td>
                                        </tr>
                                    {% endfor %}
                                </tbody>
                            </table>
                        </div>
                    </div>
                    <div
                        class="w-5 h-5 inline-block cursor-pointer"
                        ref="addRow"
                    >
                        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 477.867 477.867"><path d="M392.533,0h-307.2C38.228,0.056,0.056,38.228,0,85.333v307.2c0.056,47.105,38.228,85.277,85.333,85.333h307.2 c47.105-0.056,85.277-38.228,85.333-85.333v-307.2C477.81,38.228,439.638,0.056,392.533,0z M324.267,256H256v68.267 c0,9.426-7.641,17.067-17.067,17.067s-17.067-7.641-17.067-17.067V256H153.6c-9.426,0-17.067-7.641-17.067-17.067 s7.641-17.067,17.067-17.067h68.267V153.6c0-9.426,7.641-17.067,17.067-17.067S256,144.174,256,153.6v68.267h68.267 c9.426,0,17.067,7.641,17.067,17.067S333.692,256,324.267,256z"/>
                        </svg>
                    </div>
                </div>
            {% default %}
                TODO: Implement {{ switchType }}
        {% endswitch %}
        {% if postBackMessages|length > 0 %}
            <ul class="list-none m-0 mt-2 text-red-800">
                {% for message in postBackMessages %}
                    <li class="mb-1">{{ message|smartypants|widont }}</li>
                {% endfor %}
            </ul>
        {% endif %}
    </div>
</div>
