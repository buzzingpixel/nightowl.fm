{# @var \App\Context\Shows\Models\ShowModel show #}
{# @var mixed[] statusOptions #}
{# @var mixed[] typeOptions #}
{# @var mixed[] peopleOptions #}
{# @var mixed[] seriesOptions #}

{# @var \App\Context\Users\Models\LoggedInUser user #}
{% set user = fetchLoggedInUser() %}

{% extends 'Http/_Infrastructure/_LayoutCms.twig' %}

{% block cmsPreContent %}
    {% if deleteAction is defined and deleteAction %}
        <form
            method="post"
            action="{{ deleteAction }}"
            class="block mb-5"
            ref="ConfirmSubmit"
            data-submit-action-text="Delete {{ episode.title ?: 'Draft' }}"
        >
            <input type="hidden" name="{!--csrfTokenNameKey--}" value="{!--csrfTokenName--}">
            <input type="hidden" name="{!--csrfTokenValueKey--}" value="{!--csrfTokenValue--}">
            <button
                type="submit"
                class="inline-flex justify-center py-2 px-4 border border-transparent text-sm leading-5 font-medium rounded-md text-white bg-red-700 hover:bg-red-500 focus:outline-none focus:bg-red-800 focus:shadow-outline-indigo active:bg-red-700 transition duration-150 ease-in-out"
            >
                Delete {{ episode.title ?: 'Draft' }}&hellip;
            </button>
        </form>
    {% endif %}
{% endblock %}

{% set explicit = show.explicit ? 'true' : 'false' %}

{% if episode is defined %}
    {% set explicit = episode.explicit ? 'true' : 'false' %}
{% endif %}

{% set hosts = [] %}

{% if episode is defined %}
    {% for host in episode.hosts %}
        {% set hosts = hosts|merge([host.id]) %}
    {% endfor %}
{% else %}
    {% for host in show.hosts %}
        {% set hosts = hosts|merge([host.id]) %}
    {% endfor %}
{% endif %}

{% set guests = [] %}

{% if episode is defined %}
    {% for guest in episode.guests %}
        {% set guests = guests|merge([guest.id]) %}
    {% endfor %}
{% endif %}

{% set series = [] %}

{% if episode is defined %}
    {% for item in episode.series %}
        {% set series = series|merge([item.id]) %}
    {% endfor %}
{% endif %}

{% set inputs = [{
    label: 'Title',
    name: 'title',
    value: episode.title ?? '',
}] %}

{% if episode is not defined or not episode.isPublished %}
    {% set inputs = inputs|merge([{
        label: 'Status',
        subLabel: 'If episode is set to Draft, required fields do not need to be filled in yet.',
        name: 'status',
        type: 'radio',
        options: statusOptions,
        value: episode.status ?? '',
    }]) %}
{% endif %}

{% set inputs = inputs|merge([{
    label: 'Description',
    name: 'description',
    type: 'textarea',
    value: episode.description ?? '',
},]) %}

{% set inputs = inputs|merge([{
    label: 'Playable Episode File',
    subLabel: 'Must be an MP3',
    name: 'file',
    type: 'file_upload',
    value: episode.fileName ?? '',
},]) %}

{% if episode is not defined or not episode.isPublished %}
    {% set inputs = inputs|merge([{
        label: 'Episode Type',
        name: 'type',
        type: 'radio',
        options: typeOptions,
        value: episode.episodeType ?? '',
    },]) %}
{% endif %}

{% set inputs = inputs|merge([{
    label: 'Explicit?',
    name: 'explicit',
    type: 'lightswitch',
    value: explicit,
},]) %}

{% set inputs = inputs|merge([{
    label: 'Show Notes',
    name: 'show_notes',
    type: 'markdown',
    value: episode.showNotes ?? '',
},]) %}

{% set inputs = inputs|merge([{
    label: 'Hosts',
    name: 'hosts',
    type: 'select',
    multiple: true,
    options: peopleOptions,
    value: hosts,
},]) %}

{% set inputs = inputs|merge([{
    label: 'Guests',
    name: 'guests',
    type: 'select',
    multiple: true,
    options: peopleOptions,
    value: guests,
},]) %}

{% if episode is defined %}
    {% set keywordsArray = [] %}
    {% for item in episode.keywords %}
        {% set keywordsArray = keywordsArray|merge([item.keyword]) %}
    {% endfor %}
    {% set keywords = keywordsArray|join(', ') %}
{% endif %}

{% set inputs = inputs|merge([{
    label: 'Keywords',
    subLabel: "Comma seperated list. Keywords will be normalized without capitalization.",
    name: 'keywords',
    type: 'textarea',
    value: keywords ?? '',
},]) %}

{% set inputs = inputs|merge([{
    label: 'Series',
    name: 'series',
    type: 'select',
    multiple: true,
    options: seriesOptions,
    value: series,
},]) %}

{% if episode is not defined or not episode.isPublished %}
    {% set inputs = inputs|merge([{
        label: 'Publish At',
        subLabel: "Leave blank to publish right away. Timezone is your user account preferences timezone.",
        name: 'publish_at',
        type: 'datetime-local',
        value: episode.publishAt.setTimezone(user.model.timezone).format('Y-m-d g:i A') ?? '',
    },]) %}
{% endif %}

{% block cmsContent %}
    {% include 'Http/CMS/_Infrastructure/Forms/_LabelsOnLeftForm.twig' with {
        submitContent: episode is defined ? 'Save' : 'Create',
        cancelAction: '/cms/shows/episodes/' ~ show.id,
        inputs: inputs,
    } only %}
{% endblock %}

