{# @var \App\Context\People\Models\PersonModel|null person #}

{% extends 'Http/_Infrastructure/_LayoutCms.twig' %}

{% set personLinks = [] %}

{% for link in (person.links ?? []) %}
    {% set personLinks = personLinks|merge([{
        link_title: link.title,
        link_url: link.url,
    }]) %}
{% endfor %}

{% block cmsPreContent %}
    {% if deleteAction is defined %}
        <form
            method="post"
            action="{{ deleteAction }}"
            class="block mb-5"
            ref="ConfirmSubmit"
            data-submit-action-text="Delete {{ person.firstName }}"
        >
            <input type="hidden" name="{!--csrfTokenNameKey--}" value="{!--csrfTokenName--}">
            <input type="hidden" name="{!--csrfTokenValueKey--}" value="{!--csrfTokenValue--}">
            <button
                type="submit"
                class="inline-flex justify-center py-2 px-4 border border-transparent text-sm leading-5 font-medium rounded-md text-white bg-red-700 hover:bg-red-500 focus:outline-none focus:bg-red-800 focus:shadow-outline-indigo active:bg-red-700 transition duration-150 ease-in-out"
            >
                Delete {{ person.firstName }}&hellip;
            </button>
        </form>
    {% endif %}
{% endblock %}

{% block cmsContent %}
    {% include 'Http/CMS/_Infrastructure/Forms/_LabelsOnLeftForm.twig' with {
        submitContent: person is defined ? 'Save' : 'Create',
        cancelAction: '/cms/people',
        deleteAction: deleteAction ?? '',
        inputs: [
            {
                label: 'First Name',
                name: 'first_name',
                value: person.firstName ?? '',
            },
            {
                label: 'Last Name',
                name: 'last_name',
                value: person.lastName ?? '',
            },
            {
                label: 'Slug',
                name: 'slug',
                value: person.slug ?? '',
            },
            {
                label: 'Email',
                name: 'email',
                type: 'email',
                value: person.email ?? '',
            },
            {
                label: 'Photo',
                name: 'photo',
                type: 'file_upload',
                value: person.photoFileName ?? '',
            },
            {
                label: 'Photo Preference',
                name: 'photo_preference',
                type: 'radio',
                options: [
                    {
                        label: 'Prefer Gravatar',
                        value: 'gravatar',
                    },
                    {
                        label: 'Prefer CMS Photo',
                        value: 'cms',
                    },
                ],
                value: person.photoPreference ?? '',
            },
            {
                label: 'Bio',
                name: 'bio',
                type: 'markdown',
                value: person.bio ?? '',
            },
            {
                label: 'Location',
                name: 'location',
                value: person.location ?? '',
            },
            {
                label: 'Facebook Page Slug',
                name: 'facebook_page_slug',
                value: person.facebookPageSlug ?? '',
            },
            {
                label: 'Twitter Handle',
                name: 'twitter_handle',
                value: person.twitterHandle ?? '',
            },
            {
                label: 'Links',
                name: 'links',
                type: 'simple_table',
                fieldConfig: [
                    {
                        label: 'Link Title',
                        name: 'link_title',
                    },
                    {
                        label: 'Link URL',
                        name: 'link_url',
                    },
                ],
                value: personLinks,
            },
        ],
    } only %}
{% endblock %}

